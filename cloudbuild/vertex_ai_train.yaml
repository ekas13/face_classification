steps:
# Setup Env
- id: 'setup-environment'
  name: python
  entrypoint: bash
  args: ['-c', 'pip install -U dvc dvc[gs]; dvc pull;']

# Build & Push Trainer
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build container image'
  args: [
    'build',
    '.',
    '-t',
    'europe-west3-docker.pkg.dev/$PROJECT_ID/group28-repository/train-docker-image:latest',
    '-f',
    'dockerfiles/train.dockerfile'
  ]
- name: 'gcr.io/cloud-builders/docker'
  id: 'Push container image'
  args: [
    'push',
    'europe-west3-docker.pkg.dev/$PROJECT_ID/group28-repository/train-docker-image:latest'
  ]

- name: "alpine"
  id: "Replace values in the training config"
  entrypoint: "sh"
  args:
    - '-c'
    - |
      apk add --no-cache gettext
      envsubst < cloudbuild/config_cpu.yaml > cloudbuild/config.yaml.tmp
      mv cloudbuild/config.yaml.tmp cloudbuild/config_cpu.yaml
  secretEnv: ['WANDB_API_KEY']

- name: 'alpine'
  id: "Show config"
  waitFor: ['Replace values in the training config']
  entrypoint: "sh"
  args:
    - '-c'
    - |
      cat cloudbuild/config_cpu.yaml

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Train on vertex AI'
  waitFor: ['Replace values in the training config']
  args: [
    'ai',
    'custom-jobs',
    'create',
    '--region',
    'europe-west1',
    '--display-name',
    'example-mlops-job',
    '--config',
    '${_VERTEX_TRAIN_CONFIG}',
  ]
substitutions:
  _VERTEX_TRAIN_CONFIG: 'cloudbuild/config_cpu.yaml'
availableSecrets:
  secretManager:
  - versionName: projects/294894715547/secrets/WANDB_API_KEY/versions/latest
    env: 'WANDB_API_KEY'
options:
  logging: CLOUD_LOGGING_ONLY
