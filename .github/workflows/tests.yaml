name: Unit Tests

on:
  push:
    branches:
      - master
      - main

  pull_request:
    branches:
      - master
      - main

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.10", "3.11", "3.12"]
        torch-version: ["2.4.0", "2.5.0", "2.5.1"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ matrix.operating-system }}-py${{ matrix.python-version }}-pt${{ matrix.torch-version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ matrix.operating-system }}-py${{ matrix.python-version }}-pt${{ matrix.torch-version }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -r requirements.txt
          pip install -r requirements_tests.txt
          pip install .
          pip install dvc 'dvc[gs]'
          pip list

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Pull data from GCP (via DVC)
        run: |
          dvc pull --no-run-cache

      - name: Run tests & coverage
        env:
          PYTHONPATH: src
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          coverage run --source=src/face_classification -m pytest tests/
          coverage report -m
